service: garden-api

frameworkVersion: ">=1.0.0 <2.0.0"
package:
    exclude:
        - ./**
    include:
        - build/**
provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: us-east-1
  memorySize: 512
  apiKeys:
    - garden-api-${opt:stage, self:provider.stage}-secret
  environment:
    GARDEN_TABLE: garden-${self:service}-${opt:stage, self:provider.stage}
    SENSOR_DATA_TABLE: sensordata-${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.GARDEN_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.SENSOR_DATA_TABLE}"
functions:
  getGardenList:
    handler: build/bundle.getGardenList
    events:
      - http:
          path: garden
          method: get
          cors: true
  getGarden:
    handler: build/bundle.getGarden
    events:
      - http:
          path: garden/{gardenId}
          method: get
          cors: true
  getSensorData: 
      handler: build/bundle.getSensorData
      events:
        - http:
            path: garden/{gardenId}/sensor/{sensorType}
            method: get
            cors: true
  #private functions
  createGarden:
    handler: build/bundle.createGarden
    events:
      - http:
          path: garden
          method: post
          cors: true
          private: true
  postSensorData: 
      handler: build/bundle.postSensorData
      events:
        - http:
            path: garden/{gardenId}/sensor/{sensorType}
            method: post
            cors: true
            private: true
resources:
  Resources:
    GardenTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.GARDEN_TABLE}
    SensorDataTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: garden
            AttributeType: S
          -
            AttributeName: ts 
            AttributeType: N
        KeySchema:
          -
            AttributeName: garden
            KeyType: HASH
          -
            AttributeName: ts
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.SENSOR_DATA_TABLE}
